{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/lib/placeholder-images.ts"],"sourcesContent":["import * as z from \"zod\";\r\n\r\n// Define the type for placeholder images\r\nexport interface PlaceholderImage {\r\n  id: string;\r\n  description: string;\r\n  imageUrl: string;\r\n  imageHint: string;\r\n}\r\n\r\n// Load the placeholder images data\r\nimport placeholderData from \"./placeholder-images.json\";\r\n\r\nexport const LoginSchema = z.object({\r\n  email: z.string().email({\r\n    message: \"Please enter a valid email address.\",\r\n  }),\r\n  password: z.string().min(1, {\r\n    message: \"Password is required.\",\r\n  }),\r\n});\r\n\r\nexport const RegisterSchema = z.object({\r\n  username: z.string().min(1, {\r\n    message: \"Username is required.\",\r\n  }),\r\n  email: z.string().email({\r\n    message: \"Please enter a valid email address.\",\r\n  }),\r\n  password: z.string().min(6, {\r\n    message: \"Password must be at least 6 characters.\",\r\n  }),\r\n});\r\n\r\n// Export the placeholder images data with proper typing\r\nexport const placeholderImages: PlaceholderImage[] =\r\n  placeholderData.placeholderImages;\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAUA,mCAAmC;AACnC;;;AAEO,MAAM,cAAc,4IAAQ,CAAC;IAClC,OAAO,4IAAQ,GAAG,KAAK,CAAC;QACtB,SAAS;IACX;IACA,UAAU,4IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;AACF;AAEO,MAAM,iBAAiB,4IAAQ,CAAC;IACrC,UAAU,4IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;IACA,OAAO,4IAAQ,GAAG,KAAK,CAAC;QACtB,SAAS;IACX;IACA,UAAU,4IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;AACF;AAGO,MAAM,oBACX,sHAAe,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5001/api\";\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,UAAU,iEAAmC;AAEnD,MAAM,MAAM,gJAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC;;IAMA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/lib/data.ts"],"sourcesContent":["import api from \"./axios\";\r\n\r\nexport interface Answer {\r\n  id: string;\r\n  author: string;\r\n  avatarUrl: string;\r\n  date: string;\r\n  content: string;\r\n  votes: number;\r\n  isAccepted: boolean;\r\n}\r\n\r\nexport interface Question {\r\n  id: string;\r\n  author: string;\r\n  avatarUrl: string;\r\n  date: string;\r\n  title: string;\r\n  content: string;\r\n  votes: number;\r\n  views: number;\r\n  tags: string[];\r\n  answers: Answer[];\r\n}\r\n\r\nexport async function getQuestions(): Promise<Question[]> {\r\n  const response = await api.get(\"/questions\");\r\n  // Transform the backend data to match the frontend Question interface\r\n  return response.data.map((question: any) => ({\r\n    id: question.id,\r\n    author: question.author_username,\r\n    avatarUrl: \"/placeholder-user.jpg\", // Default avatar, should be updated with actual user avatars\r\n    date: question.created_at,\r\n    title: question.title,\r\n    content: question.content,\r\n    votes: question.vote_count || 0,\r\n    views: question.view_count || 0,\r\n    tags: question.tags || [],\r\n    answers: Array(question.answer_count || 0).fill(null), // Create empty array with the correct length\r\n  }));\r\n}\r\n\r\nexport async function getQuestionById(\r\n  id: string\r\n): Promise<{ question: Question; answers: Answer[] }> {\r\n  const response = await api.get(`/questions/${id}`);\r\n\r\n  // The backend returns a flat structure\r\n  const questionData = response.data;\r\n  const answers = questionData.answers || [];\r\n  const tags = questionData.tags || [];\r\n\r\n  // Check if questionData exists\r\n  if (!questionData) {\r\n    throw new Error(\"Question not found\");\r\n  }\r\n\r\n  // Transform the question data\r\n  const transformedQuestion: Question = {\r\n    id: questionData.id,\r\n    author: questionData.author_username,\r\n    avatarUrl: \"/placeholder-user.jpg\", // Default avatar\r\n    date: questionData.created_at,\r\n    title: questionData.title,\r\n    content: questionData.content,\r\n    votes: questionData.vote_count || 0,\r\n    views: questionData.view_count || 0,\r\n    tags: tags.map((tag: any) => tag.name || tag) || [],\r\n    answers: [], // Will be populated with transformed answers\r\n  };\r\n\r\n  // Transform the answers data\r\n  const transformedAnswers: Answer[] = answers.map((answer: any) => ({\r\n    id: answer.answer_id || answer.id,\r\n    author: answer.username || answer.author || \"Unknown\",\r\n    avatarUrl: \"/placeholder-user.jpg\", // Default avatar\r\n    date: answer.created_at,\r\n    content: answer.content,\r\n    votes: answer.votes || answer.vote_count || 0,\r\n    isAccepted: answer.is_accepted_answer || false,\r\n  }));\r\n\r\n  const sortedAnswers = [...transformedAnswers].sort((a, b) => {\r\n    if (a.isAccepted && !b.isAccepted) return -1;\r\n    if (!a.isAccepted && b.isAccepted) return 1;\r\n    return (b.votes || 0) - (a.votes || 0);\r\n  });\r\n\r\n  return { question: transformedQuestion, answers: sortedAnswers };\r\n}\r\n\r\nexport async function addQuestion(data: {\r\n  title: string;\r\n  details: string;\r\n  tags: string;\r\n}) {\r\n  const newQuestion = {\r\n    title: data.title,\r\n    content: data.details,\r\n    tags: data.tags.split(\",\").map((tag) => tag.trim()),\r\n  };\r\n  const response = await api.post(\"/questions\", newQuestion);\r\n  return response.data;\r\n}\r\n\r\nexport async function addAnswer(questionId: string, content: string) {\r\n  const response = await api.post(`/questions/${questionId}/answers`, {\r\n    content,\r\n  });\r\n  return response.data;\r\n}\r\n\r\n// ... existing code ...\r\n\r\nexport async function voteOnQuestion(\r\n  questionId: string,\r\n  voteType: \"up\" | \"down\"\r\n) {\r\n  const numericVoteType = voteType === \"up\" ? 1 : -1;\r\n  const response = await api.post(`/votes/questions/${questionId}`, {\r\n    voteType: numericVoteType,\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport async function voteOnAnswer(\r\n  questionId: string,\r\n  answerId: string,\r\n  voteType: \"up\" | \"down\"\r\n) {\r\n  const numericVoteType = voteType === \"up\" ? 1 : -1;\r\n  const response = await api.post(\r\n    `/votes/answers/${answerId}`,\r\n    { voteType: numericVoteType }\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function acceptAnswer(questionId: string, answerId: string) {\r\n  const response = await api.put(\r\n    `/answers/${answerId}/accept`\r\n  );\r\n  return response.data;\r\n}\r\n\r\n// ... existing code ...\r\n\r\nexport async function requestPasswordReset(email: string) {\r\n  const response = await api.post(\"/auth/request-password-reset\", { email });\r\n  return response.data;\r\n}\r\n\r\nexport async function resetPassword(token: string, newPassword: string) {\r\n  const response = await api.post(\"/auth/reset-password\", { token, newPassword });\r\n  return response.data;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AAyBO,eAAe;IACpB,MAAM,WAAW,MAAM,8HAAG,CAAC,GAAG,CAAC;IAC/B,sEAAsE;IACtE,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,WAAkB,CAAC;YAC3C,IAAI,SAAS,EAAE;YACf,QAAQ,SAAS,eAAe;YAChC,WAAW;YACX,MAAM,SAAS,UAAU;YACzB,OAAO,SAAS,KAAK;YACrB,SAAS,SAAS,OAAO;YACzB,OAAO,SAAS,UAAU,IAAI;YAC9B,OAAO,SAAS,UAAU,IAAI;YAC9B,MAAM,SAAS,IAAI,IAAI,EAAE;YACzB,SAAS,MAAM,SAAS,YAAY,IAAI,GAAG,IAAI,CAAC;QAClD,CAAC;AACH;AAEO,eAAe,gBACpB,EAAU;IAEV,MAAM,WAAW,MAAM,8HAAG,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,IAAI;IAEjD,uCAAuC;IACvC,MAAM,eAAe,SAAS,IAAI;IAClC,MAAM,UAAU,aAAa,OAAO,IAAI,EAAE;IAC1C,MAAM,OAAO,aAAa,IAAI,IAAI,EAAE;IAEpC,+BAA+B;IAC/B,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,8BAA8B;IAC9B,MAAM,sBAAgC;QACpC,IAAI,aAAa,EAAE;QACnB,QAAQ,aAAa,eAAe;QACpC,WAAW;QACX,MAAM,aAAa,UAAU;QAC7B,OAAO,aAAa,KAAK;QACzB,SAAS,aAAa,OAAO;QAC7B,OAAO,aAAa,UAAU,IAAI;QAClC,OAAO,aAAa,UAAU,IAAI;QAClC,MAAM,KAAK,GAAG,CAAC,CAAC,MAAa,IAAI,IAAI,IAAI,QAAQ,EAAE;QACnD,SAAS,EAAE;IACb;IAEA,6BAA6B;IAC7B,MAAM,qBAA+B,QAAQ,GAAG,CAAC,CAAC,SAAgB,CAAC;YACjE,IAAI,OAAO,SAAS,IAAI,OAAO,EAAE;YACjC,QAAQ,OAAO,QAAQ,IAAI,OAAO,MAAM,IAAI;YAC5C,WAAW;YACX,MAAM,OAAO,UAAU;YACvB,SAAS,OAAO,OAAO;YACvB,OAAO,OAAO,KAAK,IAAI,OAAO,UAAU,IAAI;YAC5C,YAAY,OAAO,kBAAkB,IAAI;QAC3C,CAAC;IAED,MAAM,gBAAgB;WAAI;KAAmB,CAAC,IAAI,CAAC,CAAC,GAAG;QACrD,IAAI,EAAE,UAAU,IAAI,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC;QAC3C,IAAI,CAAC,EAAE,UAAU,IAAI,EAAE,UAAU,EAAE,OAAO;QAC1C,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;IACvC;IAEA,OAAO;QAAE,UAAU;QAAqB,SAAS;IAAc;AACjE;AAEO,eAAe,YAAY,IAIjC;IACC,MAAM,cAAc;QAClB,OAAO,KAAK,KAAK;QACjB,SAAS,KAAK,OAAO;QACrB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI;IAClD;IACA,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAAC,cAAc;IAC9C,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,UAAU,UAAkB,EAAE,OAAe;IACjE,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,WAAW,QAAQ,CAAC,EAAE;QAClE;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAIO,eAAe,eACpB,UAAkB,EAClB,QAAuB;IAEvB,MAAM,kBAAkB,aAAa,OAAO,IAAI,CAAC;IACjD,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,YAAY,EAAE;QAChE,UAAU;IACZ;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,aACpB,UAAkB,EAClB,QAAgB,EAChB,QAAuB;IAEvB,MAAM,kBAAkB,aAAa,OAAO,IAAI,CAAC;IACjD,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAC7B,CAAC,eAAe,EAAE,UAAU,EAC5B;QAAE,UAAU;IAAgB;IAE9B,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,aAAa,UAAkB,EAAE,QAAgB;IACrE,MAAM,WAAW,MAAM,8HAAG,CAAC,GAAG,CAC5B,CAAC,SAAS,EAAE,SAAS,OAAO,CAAC;IAE/B,OAAO,SAAS,IAAI;AACtB;AAIO,eAAe,qBAAqB,KAAa;IACtD,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAAC,gCAAgC;QAAE;IAAM;IACxE,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,cAAc,KAAa,EAAE,WAAmB;IACpE,MAAM,WAAW,MAAM,8HAAG,CAAC,IAAI,CAAC,wBAAwB;QAAE;QAAO;IAAY;IAC7E,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/app/questions/%5Bid%5D/QuestionPageClientComponent.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QuestionPageClientComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuestionPageClientComponent() from the server but QuestionPageClientComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/questions/[id]/QuestionPageClientComponent.tsx <module evaluation>\",\n    \"QuestionPageClientComponent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,8BAA8B,IAAA,wQAAuB,EAC9D;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,wFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/app/questions/%5Bid%5D/QuestionPageClientComponent.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QuestionPageClientComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuestionPageClientComponent() from the server but QuestionPageClientComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/questions/[id]/QuestionPageClientComponent.tsx\",\n    \"QuestionPageClientComponent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,8BAA8B,IAAA,wQAAuB,EAC9D;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/app/questions/%5Bid%5D/page.tsx"],"sourcesContent":["import { notFound } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { ArrowLeft, Bell } from \"lucide-react\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport type { Question, Answer } from \"@/lib/data\";\r\nimport {\r\n  placeholderImages,\r\n  type PlaceholderImage,\r\n} from \"@/lib/placeholder-images\";\r\nimport { getQuestionById } from \"@/lib/data\";\r\nimport { QuestionPageClientComponent } from \"@/app/questions/[id]/QuestionPageClientComponent\";\r\n\r\ninterface QuestionPageProps {\r\n  params: Promise<{ id: string }>;\r\n}\r\n\r\n// Server Component - fetches data on the server\r\nexport default async function QuestionPage({ params }: QuestionPageProps) {\r\n  const { id } = await params;\r\n  let question: Question | null = null;\r\n  let answers: Answer[] = [];\r\n\r\n  try {\r\n    const data = await getQuestionById(id);\r\n    if (data) {\r\n      question = data.question;\r\n      answers = data.answers;\r\n    }\r\n  } catch (error: any) {\r\n    console.error(\"Failed to fetch question details:\", error);\r\n    // If there's an error fetching the question, we'll show a 404\r\n    // But first let's check if it's a 404 error specifically\r\n    if (error.response && error.response.status === 404) {\r\n      notFound();\r\n    }\r\n    // For other errors, we might want to show an error message instead\r\n    // For now, we'll still show 404\r\n    notFound();\r\n  }\r\n\r\n  if (!question) {\r\n    notFound();\r\n  }\r\n\r\n  const userImage = placeholderImages.find(\r\n    (p: PlaceholderImage) => p.id === \"user-avatar\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-background min-h-screen\">\r\n      <header className=\"py-4 px-6 bg-background border-b shadow-sm sticky top-0 z-10\">\r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <Link href=\"/dashboard\">\r\n              <ArrowLeft className=\"h-6 w-6 text-foreground\" />\r\n            </Link>\r\n            <h1 className=\"text-xl font-bold text-foreground truncate\">\r\n              Question Details\r\n            </h1>\r\n          </div>\r\n          <div className=\"flex items-center gap-4\">\r\n            <Bell className=\"h-6 w-6 text-foreground\" />\r\n            <Link href=\"/profile\">\r\n              <Avatar className=\"h-8 w-8\">\r\n                {userImage && (\r\n                  <AvatarImage src={userImage.imageUrl} alt=\"User avatar\" />\r\n                )}\r\n                <AvatarFallback>U</AvatarFallback>\r\n              </Avatar>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"p-4 pb-20\">\r\n        {/* Client Component handles interactive parts */}\r\n        <QuestionPageClientComponent\r\n          question={question}\r\n          initialAnswers={answers}\r\n          questionId={id}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AACA;;;;;;;;;AAOe,eAAe,aAAa,EAAE,MAAM,EAAqB;IACtE,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,IAAI,WAA4B;IAChC,IAAI,UAAoB,EAAE;IAE1B,IAAI;QACF,MAAM,OAAO,MAAM,IAAA,qIAAe,EAAC;QACnC,IAAI,MAAM;YACR,WAAW,KAAK,QAAQ;YACxB,UAAU,KAAK,OAAO;QACxB;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qCAAqC;QACnD,8DAA8D;QAC9D,yDAAyD;QACzD,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,KAAK,KAAK;YACnD,IAAA,iMAAQ;QACV;QACA,mEAAmE;QACnE,gCAAgC;QAChC,IAAA,iMAAQ;IACV;IAEA,IAAI,CAAC,UAAU;QACb,IAAA,iMAAQ;IACV;IAEA,MAAM,YAAY,wJAAiB,CAAC,IAAI,CACtC,CAAC,IAAwB,EAAE,EAAE,KAAK;IAGpC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,uKAAI;oCAAC,MAAK;8CACT,cAAA,8OAAC,6NAAS;wCAAC,WAAU;;;;;;;;;;;8CAEvB,8OAAC;oCAAG,WAAU;8CAA6C;;;;;;;;;;;;sCAI7D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,0MAAI;oCAAC,WAAU;;;;;;8CAChB,8OAAC,uKAAI;oCAAC,MAAK;8CACT,cAAA,8OAAC,4IAAM;wCAAC,WAAU;;4CACf,2BACC,8OAAC,iJAAW;gDAAC,KAAK,UAAU,QAAQ;gDAAE,KAAI;;;;;;0DAE5C,8OAAC,oJAAc;0DAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO1B,8OAAC;gBAAK,WAAU;0BAEd,cAAA,8OAAC,gMAA2B;oBAC1B,UAAU;oBACV,gBAAgB;oBAChB,YAAY;;;;;;;;;;;;;;;;;AAKtB","debugId":null}}]
}