{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const NotificationProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NotificationProvider() from the server but NotificationProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx <module evaluation>\",\n    \"NotificationProvider\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/Frontend/src/components/Header.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx <module evaluation>\",\n    \"default\",\n);\nexport const useNotificationContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNotificationContext() from the server but useNotificationContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx <module evaluation>\",\n    \"useNotificationContext\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,oRAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,oEACA;uCAEW,IAAA,oRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA;AAEG,MAAM,yBAAyB,IAAA,oRAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const NotificationProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NotificationProvider() from the server but NotificationProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx\",\n    \"NotificationProvider\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/Frontend/src/components/Header.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx\",\n    \"default\",\n);\nexport const useNotificationContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNotificationContext() from the server but useNotificationContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend/src/components/Header.tsx\",\n    \"useNotificationContext\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,oRAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,gDACA;uCAEW,IAAA,oRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA;AAEG,MAAM,yBAAyB,IAAA,oRAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/app/dashboard/layout.tsx"],"sourcesContent":["import Header from \"@/components/Header\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport default function DashboardLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  // Server-side: we don't do any redirection here to avoid SSR issues\r\n  // Client-side ProtectedRoute component will handle authentication\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n      <main className=\"flex-1\">{children}</main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAGe,SAAS,gBAAgB,EACtC,QAAQ,EAGT;IACC,oEAAoE;IACpE,kEAAkE;IAElE,qBACE,0PAAC;QAAI,WAAU;;0BACb,0PAAC,mJAAM;;;;;0BACP,0PAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC","debugId":null}}]
}