{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/lib/schemas.ts"],"sourcesContent":["import * as z from \"zod\";\r\n\r\nexport const LoginSchema = z.object({\r\n  email: z.string().email({\r\n    message: \"Please enter a valid email address.\",\r\n  }),\r\n  password: z.string().min(1, {\r\n    message: \"Password is required.\",\r\n  }),\r\n});\r\n\r\nexport const RegisterSchema = z.object({\r\n  username: z.string().min(1, {\r\n    message: \"Username is required.\",\r\n  }),\r\n  email: z.string().email({\r\n    message: \"Please enter a valid email address.\",\r\n  }),\r\n  password: z.string().min(6, {\r\n    message: \"Password must be at least 6 characters.\",\r\n  }),\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,cAAc,+IAAQ,CAAC;IAClC,OAAO,+IAAQ,GAAG,KAAK,CAAC;QACtB,SAAS;IACX;IACA,UAAU,+IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;AACF;AAEO,MAAM,iBAAiB,+IAAQ,CAAC;IACrC,UAAU,+IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;IACA,OAAO,+IAAQ,GAAG,KAAK,CAAC;QACtB,SAAS;IACX;IACA,UAAU,+IAAQ,GAAG,GAAG,CAAC,GAAG;QAC1B,SAAS;IACX;AACF","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/lib/actions/auth.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { z } from \"zod\";\r\nimport { RegisterSchema, LoginSchema } from \"@/lib/schemas\";\r\nimport api from \"@/lib/axios\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nexport async function register(values: z.infer<typeof RegisterSchema>) {\r\n  const validatedFields = RegisterSchema.safeParse(values);\r\n\r\n  if (!validatedFields.success) {\r\n    return { error: \"Invalid fields!\" };\r\n  }\r\n\r\n  try {\r\n    const response = await api.post(\"/auth/register\", validatedFields.data);\r\n    return {\r\n      success:\r\n        response.data.message || \"Registration successful! You can now log in.\",\r\n    };\r\n  } catch (error) {\r\n    if (error instanceof AxiosError && error.response) {\r\n      return { error: error.response.data.message || \"Registration failed.\" };\r\n    }\r\n    return { error: \"Something went wrong. Please try again.\" };\r\n  }\r\n}\r\n\r\nexport async function login(values: z.infer<typeof LoginSchema>) {\r\n  const validatedFields = LoginSchema.safeParse(values);\r\n\r\n  if (!validatedFields.success) {\r\n    return { error: \"Invalid fields!\" };\r\n  }\r\n\r\n  try {\r\n    const response = await api.post(\"/auth/login\", validatedFields.data);\r\n    const { token, message } = response.data;\r\n\r\n    if (token) {\r\n      return { success: message || \"Login successful!\", token: token };\r\n    }\r\n\r\n    return { error: \"Login failed. Please try again.\" };\r\n  } catch (error) {\r\n    if (error instanceof AxiosError && error.response) {\r\n      return {\r\n        error: error.response.data.message || \"Invalid email or password!\",\r\n      };\r\n    }\r\n    return { error: \"Something went wrong. Please try again.\" };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;IAOsB,WAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,4KAAmB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nconst Form = FormProvider;\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName;\r\n};\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n);\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState, formState } = useFormContext();\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\");\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  };\r\n};\r\n\r\ntype FormItemContextValue = {\r\n  id: string;\r\n};\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n);\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId();\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  );\r\n});\r\nFormItem.displayName = \"FormItem\";\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormLabel.displayName = \"FormLabel\";\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } =\r\n    useFormField();\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormControl.displayName = \"FormControl\";\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField();\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormDescription.displayName = \"FormDescription\";\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField();\r\n  const body = error ? String(error?.message ?? \"\") : children;\r\n\r\n  if (!body) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  );\r\n});\r\nFormMessage.displayName = \"FormMessage\";\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/Logo.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\n\r\nexport function Logo({ className }: { className?: string }) {\r\n  return (\r\n    <div className={cn(\"flex items-center gap-2\", className)}>\r\n      <svg\r\n        width=\"33\"\r\n        height=\"32\"\r\n        viewBox=\"0 0 33 32\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-full w-auto\"\r\n      >\r\n        <path\r\n          d=\"M23.6367 10.332L21.5117 6.05273L19.3867 10.332L15.1074 12.457L19.3867 14.582L21.5117 18.8613L23.6367 14.582L27.916 12.457L23.6367 10.332Z\"\r\n          className=\"fill-primary\"\r\n        />\r\n        <path\r\n          d=\"M10.9613 15.6582L9.39966 12.5039L7.83801 15.6582L4.68359 17.2198L7.83801 18.7815L9.39966 21.9359L10.9613 18.7815L14.1157 17.2198L10.9613 15.6582Z\"\r\n          className=\"fill-primary\"\r\n        />\r\n      </svg>\r\n      <span className=\"text-3xl font-bold text-foreground\">HUConnect</span>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS,KAAK,KAAqC;QAArC,EAAE,SAAS,EAA0B,GAArC;IACnB,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,2BAA2B;;0BAC5C,6LAAC;gBACC,OAAM;gBACN,QAAO;gBACP,SAAQ;gBACR,MAAK;gBACL,OAAM;gBACN,WAAU;;kCAEV,6LAAC;wBACC,GAAE;wBACF,WAAU;;;;;;kCAEZ,6LAAC;wBACC,GAAE;wBACF,WAAU;;;;;;;;;;;;0BAGd,6LAAC;gBAAK,WAAU;0BAAqC;;;;;;;;;;;;AAG3D;KAvBgB","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/EVANGADI/PHASE%204%20THE%20PROJECT%20PHASE%20-%20BUILDING%20FULLSTACK%20APPLICATIONS/HU%20Connect/Frontend/src/components/auth/RegisterForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useTransition } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as z from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\n\r\nimport { RegisterSchema } from \"@/lib/schemas\";\r\nimport { register } from \"@/lib/actions/auth\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Loader2, Eye, EyeOff } from \"lucide-react\";\r\nimport { Logo } from \"@/components/Logo\";\r\n\r\nexport function RegisterForm() {\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const [isPending, startTransition] = useTransition();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const form = useForm<z.infer<typeof RegisterSchema>>({\r\n    resolver: zodResolver(RegisterSchema),\r\n    defaultValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = (values: z.infer<typeof RegisterSchema>) => {\r\n    startTransition(() => {\r\n      register(values).then((data) => {\r\n        if (data.error) {\r\n          form.reset();\r\n          toast({\r\n            title: \"Registration Error\",\r\n            description: data.error,\r\n            variant: \"destructive\",\r\n          });\r\n        }\r\n        if (data.success) {\r\n          toast({\r\n            title: \"Success\",\r\n            description: data.success,\r\n          });\r\n          router.push(\"/\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-sm bg-card p-8 rounded-lg shadow-xl\">\r\n      <div className=\"flex flex-col items-center text-center mb-8\">\r\n        <Logo className=\"h-8 w-auto mb-6\" />\r\n        <h1 className=\"text-2xl font-bold tracking-tight\">\r\n          Create Your HU Connect Account\r\n        </h1>\r\n      </div>\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n          <FormField\r\n            control={form.control}\r\n            name=\"username\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>Username</FormLabel>\r\n                <FormControl>\r\n                  <Input\r\n                    placeholder=\"Enter your username\"\r\n                    {...field}\r\n                    disabled={isPending}\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n          <FormField\r\n            control={form.control}\r\n            name=\"email\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl>\r\n                  <Input\r\n                    placeholder=\"you@example.com\"\r\n                    {...field}\r\n                    disabled={isPending}\r\n                    type=\"email\"\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n          <FormField\r\n            control={form.control}\r\n            name=\"password\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>Password</FormLabel>\r\n                <FormControl>\r\n                  <div className=\"relative\">\r\n                    <Input\r\n                      placeholder=\"••••••••\"\r\n                      {...field}\r\n                      disabled={isPending}\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      className=\"pr-10\"\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      className=\"absolute inset-y-0 right-0 h-full px-3\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      aria-label={\r\n                        showPassword ? \"Hide password\" : \"Show password\"\r\n                      }\r\n                    >\r\n                      {showPassword ? (\r\n                        <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                      ) : (\r\n                        <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"w-full h-12 text-base\"\r\n            disabled={isPending}\r\n          >\r\n            {isPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </Form>\r\n      <div className=\"mt-6 text-center\">\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Already have an account?{\" \"}\r\n          <Link href=\"/\" className=\"font-semibold text-primary hover:underline\">\r\n            Log in\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}